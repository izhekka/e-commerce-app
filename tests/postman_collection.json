{
	"info": {
		"_postman_id": "1df3a53d-bd5b-4e72-9426-97b4cb2f4029",
		"name": "e-commerce-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Register a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Register a user, if not exists', function() {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.expect(responseJson.status).to.be.oneOf([201, 409]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Token is received', function () {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    pm.expect(responseJson.token).to.be.a('string');\r",
									"\r",
									"    pm.collectionVariables.set('auth_token', responseJson.token);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create a product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Product is created', function () {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.expect(responseJson.status).to.equal(201);\r",
									"\r",
									"    pm.collectionVariables.set('product_id', responseJson.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Some Product\",\r\n  \"sku\": \"Units\",\r\n  \"stock\": 100,\r\n  \"price\": 9.99\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/product",
							"host": [
								"{{host}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Product is retrieved correctly', function () {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    pm.expect(responseJson.status).to.equal(200);\r",
									"    pm.expect(responseJson.data.id).to.equal(pm.collectionVariables.get('product_id'));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/product/{{product_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"product",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Create an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Order is created', function () {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.expect(responseJson.status).to.equal(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": {{product_id}},\r\n  \"quantity\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/order",
							"host": [
								"{{host}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:3000"
		},
		{
			"key": "username",
			"value": "some@email.com"
		},
		{
			"key": "password",
			"value": "password"
		},
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "product_id",
			"value": ""
		}
	]
}